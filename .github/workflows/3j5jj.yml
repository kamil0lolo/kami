name: CI build 1 - (Ubuntu)
on:
  schedule:
    - cron: "*/10 * * * *"
  pull_request:
    branches:
  workflow_dispatch:
    branches:

concurrency:
  group: ${{ github.workflow }}
  cancel-in-progress: false

jobs:
  build:

    env:
      PY_COLORS: "1"
    strategy:
      fail-fast: false
      max-parallel: 1
      matrix:
        os: [ubuntu-latest]
        python-version: ["3.12"]

    runs-on: ${{ matrix.os }}
    steps:
    - uses: actions/checkout@v4
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}
    - name: Set Locale
      run: |
        sudo apt-get install tzdata locales -y && sudo locale-gen en_US.UTF-8
        sudo localectl set-locale LANG="en_US.UTF-8"
        export LANG="en_US.UTF-8"
        sudo update-locale
        locale -a
        locale
        locale -c -k LC_NUMERIC
        localectl status
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install --upgrade pip
        pip install --upgrade wheel
        pip install --upgrade seleniumbase
        pip install --upgrade pyautogui
        pip install --upgrade python-xlib
    - name: Install Chrome
      if: matrix.os == 'ubuntu-20.04'
      run: |
        sudo apt install google-chrome-stable
    - name: Check the console scripts interface
      run: |
        seleniumbase
        sbase
    - name: Install chromedriver
      run: |
        seleniumbase install chromedriver
    - name: Install Cloudflare WARP
      run: |
        # Add Cloudflare GPG key
        curl -fsSL https://pkg.cloudflareclient.com/pubkey.gpg | sudo gpg --yes --dearmor --output /usr/share/keyrings/cloudflare-warp-archive-keyring.gpg
        
        # Add the repository
        echo "deb [arch=amd64 signed-by=/usr/share/keyrings/cloudflare-warp-archive-keyring.gpg] https://pkg.cloudflareclient.com/ $(lsb_release -cs) main" | sudo tee /etc/apt/sources.list.d/cloudflare-client.list
        
        # Install WARP
        sudo apt-get update
        sudo apt-get install -y cloudflare-warp
        
        # Start the WARP service
        sudo systemctl start warp-svc
        
        # Wait for service to be ready
        sleep 5
        
        # Register using the correct command
        warp-cli --accept-tos registration new
        warp-cli --accept-tos connect
        warp-cli --accept-tos status
    - name: Run python kami.py --debug
      run: |
        python kami.py --screenshot
    - name: Upload screenshots
      uses: actions/upload-artifact@v4
      with:
        name: seleniumbase-screenshots
        path: |
          ./latest_logs/
